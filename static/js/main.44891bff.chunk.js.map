{"version":3,"sources":["theme.js","components/Player/style.js","components/Video/style.js","components/Video/index.js","GlobalStyle.js","components/NightMode/style.js","components/NightMode/index.js","components/PlaylistHeader/style.js","components/PlaylistHeader/index.js","components/PlaylistItems/style.js","components/PlaylistItems/index.js","components/Playlist/style.js","components/Playlist/index.js","components/Player/index.js","App.js","index.js"],"names":["themeDark","bgcolor","bgcolorItem","bgcolorItemActive","bgcolorPlayed","border","borderPlayed","color","themeLight","PlayerContainer","styled","main","theme","VideoContainer","div","Video","activeVideo","autoPlay","endCallback","className","width","height","playing","controls","url","onEnded","colors","GlobalStyle","createGlobalStyle","NightModeContainer","NightMode","nightMode","toggleNightMode","type","id","htmlFor","onClick","PlaylistHeaderContainer","PlaylistHeader","totalVideo","title","num","PlaylistItemsContainer","ul","props","PlaylistItem","video","key","to","duration","PlaylistItems","videos","map","PlaylistContainer","Playlist","Player","JSON","parse","document","querySelector","value","localStorageState","localStorage","getItem","initialState","playlist","useState","state","setState","useEffect","setItem","stringify","videoID","match","params","currentIndex","findIndex","prev","history","push","nextIndex","length","App","exact","path","component","ReactDOM","render","basename","getElementById"],"mappings":"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","file":"static/js/main.44891bff.chunk.js","sourcesContent":["export const themeDark = {\n  bgcolor: '#353535',\n  bgcolorItem: '#414141',\n  bgcolorItemActive: '#405c63',\n  bgcolorPlayed: '#526d4e',\n  border: 'none',\n  borderPlayed: 'none',\n  color: '#fff'\n};\n\nexport const themeLight = {\n  bgcolor: '#fff',\n  bgcolorItem: '#fff',\n  bgcolorItemActive: '#80a7b1',\n  bgcolorPlayed: '#7d9979',\n  border: '1px solid #353535',\n  borderPlayed: 'none',\n  color: '#353535'\n};\n","import styled from 'styled-components';\n\nconst PlayerContainer = styled.main`\n  width: 100%;\n  max-width: 1500px;\n  background-color: ${({ theme }) => theme.bgcolor};\n  color: ${({ theme }) => theme.color};\n  transition: all 0.2s ease-in-out;\n\n  @media (min-width: 1000px) {\n    display: flex;\n  }\n`;\n\nexport default PlayerContainer;\n","import styled from 'styled-components';\n\nexport const VideoContainer = styled.div`\n  height: 300px;\n\n  @media (min-width: 600px) {\n    height: 100vh;\n    max-height: 500px;\n  }\n\n  @media (min-width: 1000px) {\n    flex: 0.6;\n    height: 600px;\n    max-height: 600px;\n  }\n`;\n","import React from 'react';\nimport ReactPlayer from 'react-player';\nimport { VideoContainer } from './style';\n\nconst Video = ({ activeVideo, autoPlay, endCallback }) => {\n  return (\n    <VideoContainer>\n      <ReactPlayer\n        className=\"react-player\"\n        width=\"100%\"\n        height=\"100%\"\n        playing={autoPlay}\n        controls={true}\n        url={activeVideo.url}\n        onEnded={endCallback}\n      />\n    </VideoContainer>\n  );\n};\n\nexport default Video;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const colors = {\n  toggleModeBg: '#505770',\n  activeGreen: '#4b965f'\n};\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n  }\n\n  body {\n    font-size: 10px;\n    font-family: 'Hind', sans-serif;\n  }\n\n  .App {\n    min-height: 100vh;\n    display:flex;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\nimport { colors } from '../../GlobalStyle';\n\nexport const NightModeContainer = styled.div`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0 15px;\n\n  .nightMode {\n    display: inline-block;\n    width: 95px;\n    font-size: 0.8rem;\n    margin-right: 10px;\n\n    @media (min-width: 500px) {\n      font-size: 1rem;\n    }\n  }\n\n  input {\n    display: none;\n\n    &:checked + label::before {\n      left: 50%;\n    }\n  }\n\n  label {\n    width: 30px;\n    height: 20px;\n    border-radius: 30px;\n    position: relative;\n    background-color: ${colors.toggleModeBg};\n    cursor: pointer;\n\n    &::before {\n      content: '';\n      position: absolute;\n      top: 50%;\n      left: 5px;\n      transform: translateY(-50%);\n      width: 10px;\n      height: 10px;\n      border-radius: 20px;\n      background-color: white;\n      transition: all 0.1s ease-in-out;\n    }\n  }\n`;\n","import React from 'react';\nimport { NightModeContainer } from './style';\n\nconst NightMode = ({ nightMode, toggleNightMode }) => {\n  return (\n    <NightModeContainer>\n      <span className=\"nightMode\">{nightMode ? 'Bright Mode' : 'Night Mode'} </span>\n      <input type=\"checkbox\" id=\"checkbox\" />\n      <label htmlFor=\"checkbox\" onClick={toggleNightMode}></label>\n    </NightModeContainer>\n  );\n};\n\nexport default NightMode;\n","import styled from 'styled-components';\n\nexport const PlaylistHeaderContainer = styled.div`\n  height: 65px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 0.8rem;\n  font-weight: bold;\n  background-color: #696969;\n  color: white;\n  padding: 0 15px;\n\n  @media (min-width: 500px) {\n    font-size: 0.9rem;\n  }\n\n  span {\n    display: block;\n    width: 45px;\n    border-radius: 30px;\n    text-align: center;\n    padding: 3px 0;\n    font-size: 0.7rem;\n  }\n`;\n","import React from 'react';\nimport { PlaylistHeaderContainer } from './style';\n\nconst PlaylistHeader = ({ activeVideo, totalVideo }) => {\n  return (\n    <PlaylistHeaderContainer>\n      <p>{activeVideo.title}</p>\n      <span>\n        {activeVideo.num} / {totalVideo}\n      </span>\n    </PlaylistHeaderContainer>\n  );\n};\n\nexport default PlaylistHeader;\n","import styled from 'styled-components';\nimport { colors } from '../../GlobalStyle';\n\nexport const PlaylistItemsContainer = styled.ul`\n  list-style-type: none;\n  height: calc(100% - 115px);\n  display: flex;\n  flex-direction: column;\n  overflow-y: scroll;\n  font-size: 0.8rem;\n\n  li {\n    flex: 1;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n\n    .col-1 {\n      width: 15px;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      .active {\n        width: 5px;\n        height: 5px;\n        border-radius: 50%;\n        background-color: ${colors.activeGreen};\n      }\n    }\n\n    .col-2 {\n      flex: 1;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      font-weight: lighter;\n      border-radius: 10px;\n      padding-right: 15px;\n\n      span:nth-child(1) {\n        width: 20px;\n        margin-right: 7px;\n        border-right: 3px solid gray;\n      }\n\n      span:nth-child(2) {\n        font-size: 0.9rem;\n\n        a {\n          text-decoration: none;\n          color: ${(props) => props.theme.color};\n        }\n      }\n\n      span:nth-child(3) {\n        display: flex;\n        justify-content: center;\n        margin-left: auto;\n        border-radius: 5px;\n        width: 45px;\n        padding: 5px 0;\n        font-size: 0.6rem;\n        background: #565656;\n        color: #fff;\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { PlaylistItemsContainer } from './style';\nimport { Link } from 'react-router-dom';\n\nconst PlaylistItem = ({ video, activeVideo }) => {\n  return (\n    <li key={video.title}>\n      <div className=\"col-1\">{activeVideo.num === video.num ? <span className=\"active\"></span> : null}</div>\n      <div className=\"col-2\">\n        <span>{video.num}</span>\n        <span>\n          <Link to={`/${video.id}`}>{video.title}</Link>\n        </span>\n        <span>{video.duration}</span>\n      </div>\n    </li>\n  );\n};\n\nconst PlaylistItems = ({ videos, activeVideo }) => {\n  return (\n    <PlaylistItemsContainer>\n      {videos.map((video) => (\n        <PlaylistItem key={video.title} video={video} activeVideo={activeVideo} />\n      ))}\n    </PlaylistItemsContainer>\n  );\n};\n\nexport default PlaylistItems;\n","import styled from 'styled-components';\n\nexport const PlaylistContainer = styled.div`\n  height: 600px;\n  font-size: 1.2rem;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n\n  @media (min-width: 1000px) {\n    flex: 0.4;\n  }\n`;\n","import React from 'react';\nimport NightMode from '../NightMode';\nimport PlaylistHeader from '../PlaylistHeader';\nimport PlaylistItems from '../PlaylistItems';\nimport { PlaylistContainer } from './style';\n\nconst Playlist = ({ nightMode, toggleNightMode, activeVideo, totalVideo, videos }) => {\n  return (\n    <PlaylistContainer>\n      <NightMode nightMode={nightMode} toggleNightMode={toggleNightMode} />\n      <PlaylistHeader activeVideo={activeVideo} totalVideo={totalVideo} />\n      <PlaylistItems videos={videos} activeVideo={activeVideo} />\n    </PlaylistContainer>\n  );\n};\n\nexport default Playlist;\n","import React, { useState, useEffect } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { themeDark, themeLight } from '../../theme';\nimport PlayerContainer from './style';\nimport Video from '../Video';\nimport Playlist from '../Playlist';\n\nconst Player = (props) => {\n  const videos = JSON.parse(document.querySelector('[name=\"videos\"]').value);\n  const localStorageState = JSON.parse(localStorage.getItem(`playlist`));\n\n  const initialState = {\n    videos: videos.playlist,\n    activeVideo: videos.playlist[0],\n    autoPlay: true,\n    nightMode: true\n  };\n\n  const [state, setState] = useState(initialState || localStorageState);\n\n  useEffect(() => {\n    localStorage.setItem('playlist', JSON.stringify(state));\n  }, [state]);\n\n  useEffect(() => {\n    const videoID = props.match.params.activeVideo;\n\n    if (videoID) {\n      /*\n      update activeVideo state when\n        - video ends\n        - PlaylistItem is clicked\n       */\n      const currentIndex = state.videos.findIndex((video) => video.id === videoID);\n      setState((prev) => ({ ...prev, activeVideo: state.videos[currentIndex] }));\n    } else {\n      // set the first video'id to '/:activevideo'\n      props.history.push(`/${state.activeVideo.id}`);\n    }\n  }, [state.videos, state.activeVideo, props.match.params, props.history]);\n\n  // get the next video when current video ends\n  const endCallback = () => {\n    const videoID = props.match.params.activeVideo;\n    const currentIndex = state.videos.findIndex((video) => video.id === videoID);\n    const nextIndex = currentIndex === state.videos.length - 1 ? 0 : currentIndex + 1;\n\n    props.history.push(`/${state.videos[nextIndex].id}`);\n  };\n\n  const toggleNightMode = () => {\n    setState((prev) => ({ ...prev, nightMode: !state.nightMode }));\n  };\n\n  return (\n    <ThemeProvider theme={state.nightMode ? themeDark : themeLight}>\n      <PlayerContainer>\n        <Video activeVideo={state.activeVideo} autoPlay={state.autoPlay} endCallback={endCallback} />\n        <Playlist\n          nightMode={state.nightMode}\n          toggleNightMode={toggleNightMode}\n          activeVideo={state.activeVideo}\n          totalVideo={state.videos.length}\n          videos={state.videos}\n        />\n      </PlayerContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default Player;\n","import React from 'react';\nimport Player from './components/Player';\nimport { Route, Switch } from 'react-router-dom';\nimport GlobalStyle from './GlobalStyle';\n\nconst App = () => (\n  <div className=\"App\">\n    <GlobalStyle />\n    <Switch>\n      <Route exact path=\"/\" component={Player} />\n      <Route exact path=\"/:activeVideo\" component={Player} />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router basename=\"/youtube-playlist\">\n    <App />\n  </Router>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}